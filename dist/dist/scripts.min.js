"use strict";

angular.module("whatToDo.directives", []).directive("appVersion", [ "version", function(a) {
    return function(b, c, d) {
        c.text(a);
    };
} ]).directive("ngEnter", function() {
    return function(a, b, c) {
        b.bind("keydown keypress", function(b) {
            13 === b.which && (a.$apply(function() {
                a.$eval(c.ngEnter, {
                    event: b
                });
            }), b.preventDefault());
        });
    };
}), angular.module("whatToDo.filters", []).filter("likes", [ function() {
    return function(a) {
        var b = 0;
        return a.forEach(function(a) {
            1 === a && b++;
        }), b;
    };
} ]).filter("dislikes", [ function() {
    return function(a) {
        var b = 0;
        return a.forEach(function(a) {
            0 === a && b++;
        }), b;
    };
} ]), angular.module("whatToDo.services", []).factory("DatabaseService", [ "$rootScope", "$http", "$firebaseObject", "$firebaseArray", "$location", "$timeout", function(a, b, c, d, e, f) {
    var g, h, i, j = function(b) {
        g = b, h = g.child("questions"), i = d(h), i.$loaded(function(b) {
            a.isQuestionsListLoaded = !0;
        });
    }, k = function(a) {
        var b = i.$add(a);
        return b;
    }, l = function(a) {
        var b = i.$getRecord(a.key);
        b.isLiked = a.isLiked, i.$save(b);
    }, m = function(a, b) {
        var d = g.child("questions/" + a + "/"), e = c(d);
        e.$loaded(function(a) {
            b(a);
        });
    };
    return {
        init: j,
        addQuestion: k,
        saveQuestion: l,
        loadQuestion: m
    };
} ]), angular.module("whatToDo.controllers", []).controller("GlobalController", [ "$rootScope", "$scope", "$firebaseObject", "$firebaseArray", "$timeout", "DatabaseService", function(a, b, c, d, e, f) {
    var g = new Date();
    a.app = {
        year: g.getFullYear(),
        version: "2.0.2"
    }, a.firebaseRef, a.questionObject = {
        text: "",
        options: [],
        answer: null,
        date: null,
        isLiked: [ -1 ],
        isLikedAdded: -1
    }, a.questionUrl, b.init = function() {
        a.firebaseRef = new Firebase("https://what-to-do-app.firebaseio.com/"), f.init(a.firebaseRef), 
        angular.element("#loading").hide(), angular.element("#app-content").show();
    }, a.addQuestionToDB = function(c) {
        c.text = c.text || "";
        var d = f.addQuestion(c);
        d.then(function(c) {
            e(function() {
                b.$apply(function() {
                    a.questionObject.key = c.key();
                });
            }, 100);
        });
    }, a.saveQuestionToDB = function(a) {
        f.saveQuestion(a);
    }, a.buttonAsk = function() {
        angular.element("#home-jumbotron").slideUp(function() {
            angular.element("#container-marketing").slideUp(function() {
                var a = angular.element("#container-app");
                angular.element("html,body").animate({
                    scrollTop: a.offset().top - 160
                }, 500), a.find("input:first").focus();
            });
        });
    }, a.$watch("questionObject.key", function(b, c) {
        a.questionUrl = "http://valkirilov.github.io/what-to-do/#/q/" + b, angular.element("#fb-share").attr("data-href", a.questionUrl), 
        angular.element("#twitter-share").attr("url", a.questionUrl), angular.element("#goole-share").attr("data-href", a.questionUrl);
    }), b.init();
} ]).controller("AppController", [ "$rootScope", "$scope", "$timeout", "$interval", "$stateParams", "DatabaseService", function(a, b, c, d, e, f) {
    b.data = [], b.items = [], b.askButton = !1, b.askResult = !1, b.divResult = angular.element("#divResult"), 
    b.divAnswer = angular.element("#divAnswer"), b.rotateInterval = null, b.canvas = null, 
    b.context = null, b.chart = null, b.canvasSize = null;
    var g = [ [ "#1abc9c", "#f1c40f", "#2ecc71", "#e67e22", "#3498db", "#e74c3c", "#9b59b6", "#bdc3c7", "#34495e" ], [ "#897FBA", "#2CC990", "#EEE657", "#00B5B5", "#FCB941", "#8870FF", "#FC6042", "#7E3661", "#E01931", "#2C82C9", "#BB3658", "#7BB0A6", "#D98B3A", "#42729B" ], [ "#ED5565", "#FC6E51", "#FFCE54", "#A0D468", "#4FC1E9", "#5D9CEC", "#AC92EC", "#EC87C0", "#656D78", "#DA4453", "#E9573F", "#F6BB42", "#8CC152", "#4A89DC", "#967ADC", "#D770AD" ], [ "#001F3F", "#0074D9", "#7FDBFF", "#39CCCC", "#3D9970", "#2ECC40", "#01FF70", "#FFDC00", "#FF851B", "#FF4136", "#85144B", "#F012BE", "#B10DC9" ] ];
    b.colors = [], b.nextColor = 0, b.musicRotate = null, b.musicFinish = null, b.soundRotate = "./sounds/start.wav", 
    b.soundFinish = "./sounds/end.wav", b.loadingQuestion = !1, b.init = function(a) {
        b.canvas = angular.element(a), b.context = b.canvas.get(0).getContext("2d"), b.canvasSize = {
            width: b.canvas.width(),
            height: b.canvas.height()
        }, b.musicRotate = new Audio(), b.musicFinish = new Audio(), b.musicRotate.setAttribute("preload", "auto"), 
        b.musicFinish.setAttribute("preload", "auto"), b.musicRotate.setAttribute("src", b.soundRotate), 
        b.musicFinish.setAttribute("src", b.soundFinish), b.musicRotate.load(), b.musicFinish.load(), 
        b.getCollorPalette();
        new Clipboard("#btn-copy-clipboard");
    }, a.$on("$stateChangeSuccess", function(a, c, d, e, g) {
        "question" === c.name ? (b.loadingQuestion = !0, f.loadQuestion(d.questionId, b.loadQuestion)) : b.newQuestion();
    }), b.getCollorPalette = function() {
        var a = b.getRandom(g.length);
        b.colors = b.shuffleArray(g[a]);
    }, b.getRandom = function(a) {
        return Math.floor(Math.random() * a);
    }, b.shuffleArray = function(a) {
        for (var b, c, d = a.length; 0 !== d; ) c = Math.floor(Math.random() * d), d -= 1, 
        b = a[d], a[d] = a[c], a[c] = b;
        return a;
    }, b.contains = function(a, b) {
        for (var c in a) if (a[c] === b) return !0;
        return !1;
    }, b.removeChoice = function(a) {
        var c = -1;
        for (var d in b.data) b.data[d].name === a.name && (c = d);
        b.data.splice(c, 1), b.items.splice(c, 1), b.askButton = !0, b.prepareChoices(), 
        b.drawChart({
            animateRotate: !1,
            animateScale: !0
        });
    }, b.removeAll = function() {
        for (var a in b.data) b.removeChoice(b.data[a]);
        b.data = [], b.index = [];
    }, b.addChoice = function() {
        if (void 0 !== b.newChoice && 0 !== b.newChoice.length && !b.contains(b.data, b.newChoice)) {
            var a = {
                id: b.data.length + 1,
                name: b.newChoice
            };
            b.data.push(a), b.newChoice = "", b.prepareChoices(), b.askButton = !0, b.askResult = !1, 
            b.changeAnswerDivVisibility();
        }
    }, b.goToChoice = function() {
        angular.element("#form-input-choice").focus();
    }, b.prepareChoices = function() {
        b.items = [], b.nextColor = 0;
        var a = 100 / b.data.length;
        for (var c in b.data) {
            var d = {};
            b.data[c].color ? d.color = b.data[c].color : (b.nextColor = ++b.nextColor == b.colors.length ? 0 : b.nextColor, 
            d.color = b.colors[b.nextColor]), d.value = a, d.name = b.data[c].name, d.id = b.data[c].id, 
            b.items.push(d);
        }
        b.drawChart({
            animateRotate: !1,
            animateScale: !0
        });
    }, b.drawChart = function(a) {
        a.showTooltips = !1, b.chart = new Chart(b.context).Doughnut(b.items, a);
    }, b.changeAnswerDivVisibility = function(a) {
        1 === a ? (b.divAnswer.css("opacity", "1"), b.divAnswer.css("display", "block")) : (b.divAnswer.css("opacity", "0"), 
        b.divAnswer.css("display", "none"));
    }, b.randomize = function() {
        if (0 !== b.data.length) {
            b.drawChart({
                animateRotate: !1,
                animateScale: !1
            }), b.changeAnswerDivVisibility(), b.showResultCircle("?", "#333333");
            var e = 3600 / b.items.length, f = b.getRandom(e), g = "rotate(" + f + "deg)";
            b.canvas.addClass("disable-animation"), b.setRotation("rotate(0deg)"), b.canvas.removeClass("disable-animation"), 
            b.setRotation(g), b.askButton = !1, b.askResult = !0, b.musicRotate.play();
            var h = 0;
            b.rotateInterval = d(function() {
                h = h >= b.items.length ? 0 : h;
                var a = b.items[h].color;
                b.divResult.css("background-color", a), h++;
            }, 500), c(function() {
                b.musicFinish.play(), d.cancel(b.rotateInterval);
                var c = b.getRandom(b.data.length), e = b.items[c].color, f = b.items[c].id;
                b.showResultCircle(f, e), b.divResult.addClass("animation-once"), b.divResult.addClass("bounceIn");
                var g = angular.element("#resultBadge"), h = angular.element("#resultName");
                g.css("background-color", e), g.text(b.items[c].id), h.text(b.items[c].name), b.changeAnswerDivVisibility(1);
                var i = new Date();
                a.questionObject = {
                    text: b.question,
                    options: b.items,
                    answer: {
                        badge: g.text(),
                        name: h.text(),
                        color: e
                    },
                    date: i.toString(),
                    isLiked: [ -1 ],
                    isLikedAdded: -1
                }, a.addQuestionToDB(a.questionObject);
            }, 5e3);
        }
    }, b.newQuestion = function() {
        b.data = [], b.items = [], b.askButton = !1, b.askResult = !1, b.question = "", 
        a.questionObject = {
            text: "",
            options: [],
            answer: null,
            date: null,
            isLiked: [ -1 ],
            isLikedAdded: -1
        }, b.getCollorPalette(), b.divResult.removeClass("animation-once"), b.divResult.removeClass("bounceIn"), 
        b.changeAnswerDivVisibility(0), b.drawChart({}), b.showResultCircle("?", "#333333"), 
        a.buttonAsk();
    }, b.voteQuestion = function(b) {
        a.questionObject.isLiked.push(b), a.saveQuestionToDB(a.questionObject), c(function() {
            a.$apply(function() {
                a.questionObject.isLikedAdded = b;
            });
        }, 100);
    }, b.setRotation = function(a) {
        b.canvas.get(0).style.MozTransform = a, b.canvas.get(0).style.webkitTransform = a, 
        b.canvas.get(0).style.transform = a;
    }, b.showResultCircle = function(a, c) {
        b.divResult.text(a), b.divResult.css("background-color", c);
    }, b.loadQuestion = function(d) {
        angular.element("#loading-question").slideUp(), c(function() {
            b.$apply(function() {
                a.questionObject = d, b.loadingQuestion = !1, b.question = d.text, b.data = d.options, 
                b.prepareChoices(), b.drawChart({
                    animateRotate: !1,
                    animateScale: !0
                }), b.divResult.addClass("animation-once"), b.divResult.addClass("bounceIn");
                var c = angular.element("#resultBadge"), e = angular.element("#resultName");
                c.css("background-color", d.answer.color), c.text(d.answer.badge), e.text(d.answer.name), 
                b.changeAnswerDivVisibility(1), b.showResultCircle(d.answer.badge, d.answer.color), 
                b.askResult = !0;
            }), a.$apply(function() {
                a.questionObject.key = d.$id;
            });
        }, 100);
    }, b.init("#canvas");
} ]), angular.module("whatToDo", [ "ui.router", "whatToDo.filters", "whatToDo.services", "whatToDo.directives", "whatToDo.controllers", "firebase" ]).run([ "$rootScope", "$state", "$stateParams", function(a, b, c) {
    a.$state = b, a.$stateParams = c;
} ]).config([ "$stateProvider", "$urlRouterProvider", function(a, b) {
    b.otherwise("/"), a.state("app", {
        url: "/",
        templateUrl: "./partials/home.html"
    }).state("question", {
        url: "/q/{questionId:[a-zA-Z0-9_-]+}",
        templateUrl: "./partials/question.html"
    }).state("contacts", {
        url: "/contacts",
        templateUrl: "./partials/contacts.html"
    });
} ]);